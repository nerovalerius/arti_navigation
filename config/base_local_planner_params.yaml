controller_frequency: 5.0
recovery_behaviour_enabled: true

NavfnROS:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

TrajectoryPlannerROS:
  max_vel_x: 0.35
  min_vel_x: 0.15
  max_rotational_vel: 0.3
  max_vel_theta: 0.3
  min_vel_theta: -0.5
  min_in_place_rotational_vel: 0.5
  min_in_place_vel_theta: 0.5
  escape_vel: -0.2
  acc_lim_th: 0.5
  acc_lim_x: 0.5
  acc_lim_y: 0.5
  holonomic_robot: false

DWAPlannerROS:
   max_vel_x: 0.35
   min_vel_x: -0.35
   max_rotational_vel: 0.3
   max_vel_theta: 0.5
   min_vel_theta: -0.5
   min_in_place_vel_theta: 0.5
   escape_vel: -0.2
   acc_lim_x: 1
   acc_lim_y: 1
   acc_lim_theta: 1.5

   holonomic_robot: false
   yaw_goal_tolerance: 0.1 # about 6 degrees
   xy_goal_tolerance: 0.2  # 20 cm
   latch_xy_goal_tolerance: false
   pdist_scale: 0.8
   gdist_scale: 0.6
   meter_scoring: true
   prefer_forward_cost_function: 0.0

   heading_lookahead: 1.0
   heading_scoring: false
   heading_scoring_timestep: 0.8
   occdist_scale: 0.1
   oscillation_reset_dist: 0.05
   publish_cost_grid_pc: false
   prune_plan: true

   sim_time: 1.5
   sim_granularity: 0.025
   angular_sim_granularity: 0.025
   vx_samples: 8
   vtheta_samples: 20
   dwa: true
   simple_attractor: false

TebLocalPlannerROS:

 odom_topic: odom
 map_frame: /odom
    
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 3.0
 feasibility_check_no_poses: 3
    
 # Robot
         
 max_vel_x: 0.4
 max_vel_x_backwards: 0.4
 max_vel_theta: 0.4
 acc_lim_x: 0.4
 acc_lim_theta: 0.4 
 min_turning_radius: 0.9 # You might set the value slighly larger, since bounding is performed using soft-constfraints in optimization (penalties).
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "polygon"
   radius: 0.2 # for type "circular"
   line_start: [-0.3, 0.0] # for type "line"
   line_end: [0.3, 0.0] # for type "line"
   front_offset: 0.2 # for type "two_circles"
   front_radius: 0.2 # for type "two_circles"
   rear_offset: 0.2 # for type "two_circles"
   rear_radius: 0.2 # for type "two_circles"
   vertices: [[0.65, 0.3], [0.65, -0.3], [-0.15, -0.3], [-0.15, 0.3]] # for type "polygon"

 # GoalTolerance
    
 xy_goal_tolerance: 0.5
 yaw_goal_tolerance: 0.3
 free_goal_vel: False
    
 # Obstacles
    
 min_obstacle_dist: 0.2 # The allowed minimum Euclidean distance to the obstacle
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 30
 costmap_converter_plugin: "CostmapToPolygonsDBSMCCH"
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5
 allow_init_with_backwards_motion: True

 # Optimization
    
 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0 # You might shift all penalty terms at once with the single parameter penalty_epsilon, but be careful since doing so will massively influence the optimziation results.
 weight_max_vel_x: 1
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 0 #  is ignored if the minimum turning radius is non-zero.
 weight_kinematics_turning_radius: 10
 weight_optimaltime: 3
 weight_obstacle: 30
 weight_dynamic_obstacle: 10 # not in use yet
 selection_alternative_time_cost: False # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False